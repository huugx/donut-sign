{"ast":null,"code":"export const commaNumber = num => num.toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\").replace(/[^0-9^,^\\.]+/g, '');\nexport const shortNum = donuts => {\n  let val = NaN;\n  if (donuts > 0) donuts = Math.floor(donuts);\n  if (donuts < 100000) val = commaNumber(donuts);else if (donuts < 1000000) val = Math.floor(donuts / 1000) + 'K';else val = Math.floor(donuts / 100000) / 10 + 'M';\n  return Number.isNaN(val) ? '0' : val;\n};","map":{"version":3,"sources":["/Users/hugo/Documents/Code/Scripts/donut-sign/frontend/src/components/wallet/utils.js"],"names":["commaNumber","num","toString","replace","shortNum","donuts","val","NaN","Math","floor","Number","isNaN"],"mappings":"AAAA,OAAO,MAAMA,WAAW,GAAGC,GAAG,IAAIA,GAAG,CAACC,QAAJ,GAAeC,OAAf,CAAuB,uBAAvB,EAAgD,GAAhD,EAAqDA,OAArD,CAA6D,eAA7D,EAA8E,EAA9E,CAA3B;AAEP,OAAO,MAAMC,QAAQ,GAAGC,MAAM,IAAI;AAChC,MAAIC,GAAG,GAAGC,GAAV;AACA,MAAIF,MAAM,GAAG,CAAb,EAAgBA,MAAM,GAAGG,IAAI,CAACC,KAAL,CAAWJ,MAAX,CAAT;AAChB,MAAIA,MAAM,GAAG,MAAb,EAAqBC,GAAG,GAAGN,WAAW,CAACK,MAAD,CAAjB,CAArB,KACK,IAAIA,MAAM,GAAG,OAAb,EAAsBC,GAAG,GAAGE,IAAI,CAACC,KAAL,CAAWJ,MAAM,GAAC,IAAlB,IAA0B,GAAhC,CAAtB,KACAC,GAAG,GAAGE,IAAI,CAACC,KAAL,CAAWJ,MAAM,GAAC,MAAlB,IAA0B,EAA1B,GAA+B,GAArC;AACL,SAAOK,MAAM,CAACC,KAAP,CAAaL,GAAb,IAAoB,GAApB,GAA0BA,GAAjC;AACD,CAPM","sourcesContent":["export const commaNumber = num => num.toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\").replace(/[^0-9^,^\\.]+/g, '');\n\nexport const shortNum = donuts => {\n  let val = NaN;\n  if (donuts > 0) donuts = Math.floor(donuts)\n  if (donuts < 100000) val = commaNumber(donuts);\n  else if (donuts < 1000000) val = Math.floor(donuts/1000) + 'K';\n  else val = Math.floor(donuts/100000)/10 + 'M';\n  return Number.isNaN(val) ? '0' : val;\n}\n"]},"metadata":{},"sourceType":"module"}