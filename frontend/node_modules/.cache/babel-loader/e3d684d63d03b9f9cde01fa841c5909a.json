{"ast":null,"code":"var _jsxFileName = \"/Users/hugo/Documents/Code/Scripts/donut-sign/frontend/src/components/wallet/WalletInfo.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport { ethers } from \"ethers\";\nimport { useDonuts } from \"./useDonuts\";\nimport { formatEther } from \"@ethersproject/units\";\nimport { shortNum } from \"./utils\";\nimport Jazzicon, { jsNumberForAddress } from 'react-jazzicon';\nimport './WalletInfo.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst ConnectYourWalletButton = ({\n  connect\n}) => {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"nav\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"wallet\",\n      children: /*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"connect-btn\",\n        onClick: connect,\n        children: \"Connect Wallet\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 13,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 11,\n    columnNumber: 5\n  }, this);\n};\n\n_c = ConnectYourWalletButton;\n\nconst ConnetToWeb3 = async () => {\n  if (window.ethereum) {\n    try {\n      await window.ethereum.request({\n        method: 'eth_requestAccounts'\n      });\n\n      if (typeof window.ethereum !== 'undefined') {\n        let provider = new ethers.providers.Web3Provider(window.ethereum, \"any\");\n        let signer = await provider.getSigner();\n        let network = await provider.getNetwork();\n        let address = await signer.getAddress();\n        return {\n          provider,\n          signer,\n          network,\n          address\n        };\n      }\n    } catch (error) {\n      if (error.code === 4001) {}\n    }\n  }\n};\n\n_c2 = ConnetToWeb3;\n\nconst WalletDetails = ({\n  address,\n  donuts\n}) => {\n  const shorthand = address.substring(0, 6) + '...' + address.substring(address.length - 4);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"nav\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"wallet\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"donut-bal\",\n        children: [shortNum(donuts), \"  \\uD83C\\uDF69\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"address-container\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"short-address\",\n          children: shorthand\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"jazz-icon\",\n          children: /*#__PURE__*/_jsxDEV(Jazzicon, {\n            diameter: 18,\n            seed: jsNumberForAddress(address)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 52,\n            columnNumber: 38\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 47,\n    columnNumber: 5\n  }, this);\n};\n\n_c3 = WalletDetails;\nexport default function WalletInfo(props) {\n  _s();\n\n  const [address, setAddress] = useState({});\n  const [provider, setProvider] = useState({});\n  const [network, setNetwork] = useState({});\n  const [active, setActive] = useState(false);\n  const [donutBalance, setDonutBalance] = useState();\n\n  const handleConnect = async () => {\n    const active = await ConnetToWeb3();\n\n    if (active) {\n      setProvider(active.provider);\n      setAddress(active.address);\n      setNetwork(active.network);\n      setActive(true);\n      props.onConnect(true);\n    } else {\n      setActive(false);\n    }\n  };\n\n  useDonuts(active, provider, address, network).then(result => {\n    setDonutBalance(formatEther(result.donutBalance.toString()));\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: !active ? /*#__PURE__*/_jsxDEV(ConnectYourWalletButton, {\n      connect: handleConnect\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 19\n    }, this) : /*#__PURE__*/_jsxDEV(WalletDetails, {\n      address: address,\n      donuts: donutBalance\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 73\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 83,\n    columnNumber: 5\n  }, this);\n}\n\n_s(WalletInfo, \"Kpcyabrtw/dYADUy2BU3Yu1fRvk=\", false, function () {\n  return [useDonuts];\n});\n\n_c4 = WalletInfo;\n;\n\nvar _c, _c2, _c3, _c4;\n\n$RefreshReg$(_c, \"ConnectYourWalletButton\");\n$RefreshReg$(_c2, \"ConnetToWeb3\");\n$RefreshReg$(_c3, \"WalletDetails\");\n$RefreshReg$(_c4, \"WalletInfo\");","map":{"version":3,"sources":["/Users/hugo/Documents/Code/Scripts/donut-sign/frontend/src/components/wallet/WalletInfo.js"],"names":["React","useState","ethers","useDonuts","formatEther","shortNum","Jazzicon","jsNumberForAddress","ConnectYourWalletButton","connect","ConnetToWeb3","window","ethereum","request","method","provider","providers","Web3Provider","signer","getSigner","network","getNetwork","address","getAddress","error","code","WalletDetails","donuts","shorthand","substring","length","WalletInfo","props","setAddress","setProvider","setNetwork","active","setActive","donutBalance","setDonutBalance","handleConnect","onConnect","then","result","toString"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\nimport { ethers } from \"ethers\";\nimport { useDonuts } from \"./useDonuts\";\nimport { formatEther } from \"@ethersproject/units\";\nimport { shortNum } from \"./utils\";\nimport Jazzicon, { jsNumberForAddress } from 'react-jazzicon';\nimport './WalletInfo.css';\n\nconst ConnectYourWalletButton = ({ connect }) => {\n  return (\n    <div className=\"nav\"> \n      <div className=\"wallet\"> \n        <span className=\"connect-btn\" onClick={ connect }>Connect Wallet</span>\n      </div>\n    </div>\n  )\n}\n\nconst ConnetToWeb3 = async () => {\n  if (window.ethereum) {\n    try {\n      await window.ethereum.request({ method: 'eth_requestAccounts' });\n      if (typeof window.ethereum !== 'undefined') {       \n        let provider = new ethers.providers.Web3Provider(window.ethereum, \"any\");\n        let signer = await provider.getSigner();\n        let network = await provider.getNetwork();\n        let address = await signer.getAddress();\n\n      return {\n        provider,\n        signer,\n        network,\n        address\n      }\n    }\n    } catch (error) {\n      if (error.code === 4001) {\n      }\n    }\n  }\n};\n\nconst WalletDetails = ({ address, donuts }) => {\n  const shorthand = address.substring(0,6) + '...' + address.substring(address.length - 4);\n\n  return (\n    <div className=\"nav\">\n      <div className=\"wallet\">\n        <div className=\"donut-bal\">{ shortNum(donuts) }  🍩</div>\n        <div className=\"address-container\">\n          <div className=\"short-address\">{ shorthand }</div>\n          <div className=\"jazz-icon\"><Jazzicon diameter={18} seed={jsNumberForAddress(address)} /></div>\n        </div>\n      </div>\n  </div>\n  )\n};\n\nexport default function WalletInfo(props) {\n  const [ address, setAddress ] = useState({});\n  const [ provider, setProvider ] = useState({});\n  const [ network, setNetwork ] = useState({});\n  const [ active, setActive ] = useState(false);\n  const [ donutBalance, setDonutBalance ] = useState();\n  \n  const handleConnect = async () => {\n    const active = await ConnetToWeb3();\n\n    if (active) {\n      setProvider(active.provider);\n      setAddress(active.address);\n      setNetwork(active.network);\n      setActive(true);\n      props.onConnect(true);\n    } else {\n      setActive(false);\n    }\n  }\n\n  useDonuts(active, provider, address, network).then((result)=>{ setDonutBalance(formatEther(result.donutBalance.toString())) });  \n  \n  return (\n    <div>\n      { !active ? <ConnectYourWalletButton connect={handleConnect} /> : <WalletDetails address={ address } donuts={ donutBalance } /> }\n    </div>\n  )\n\n};\n"]},"metadata":{},"sourceType":"module"}