{"ast":null,"code":"import { Contract } from \"@ethersproject/contracts\";\nimport chains from \"./contracts/chains.json\";\nimport abis from \"./contracts/abis\";\nexport const useDonuts = async (active, provider, address, network) => {\n  let donutBalance = 0;\n  if (!active) return {\n    donutBalance\n  };\n  let contract = new Contract(chains[network.chainId].donut, abis.IERC20, provider);\n  donutBalance = await contract.balanceOf(address);\n  return {\n    donutBalance\n  };\n}; // import React, { useState, useEffect, useContext, createContext } from \"react\";\n// import { Contract } from \"@ethersproject/contracts\";\n// import { Zero } from \"@ethersproject/constants\";\n// import chains from \"./contracts/chains.json\";\n// import abis from \"./contracts/abis\";\n// const donutContext = createContext();\n// export function UseDonutsProvider({ web3React, children }){\n//   const donuts = useProvideDonuts(web3React);\n//   return <donutContext.Provider value={donuts}>{children}</donutContext.Provider>;\n// }\n// export const useDonuts = () => {\n//   return useContext(donutContext);\n// };\n// function useProvideDonuts({account, active, library, chainId}){\n//   const [signer, setSigner] = useState(null);\n//   const [feeBalance, setFeeBalance] = useState(Zero);\n//   const [donutBalance, setDonutBalance] = useState(Zero);\n//   const [token, setToken] = useState(null);\n//   const [tipping, setTipping] = useState(null);\n//   useEffect(() => {\n//     if(!active) { setSigner(null); setFeeBalance(Zero); setDonutBalance(Zero); setToken(null); setTipping(null); return; }\n//     setSigner(library.getSigner())\n//     const token = new Contract(chains[chainId.toString()].donut, abis.IERC20, library);\n//     setToken(token);\n//     setTipping(tipping);\n//     async function getBalance(account){\n//       setFeeBalance(await library.getBalance(account));\n//       setDonutBalance(await token.balanceOf(account));\n//     }\n//     account && getBalance(account);\n//   }, [active, chainId])\n//   return {\n//     signer,\n//     feeBalance,\n//     donutBalance,\n//     token\n//   };\n// }","map":{"version":3,"sources":["/Users/hugo/Documents/Code/donut.sign/frontend/src/components/wallet/useDonuts.js"],"names":["Contract","chains","abis","useDonuts","active","provider","address","network","donutBalance","contract","chainId","donut","IERC20","balanceOf"],"mappings":"AAAA,SAASA,QAAT,QAAyB,0BAAzB;AACA,OAAOC,MAAP,MAAmB,yBAAnB;AACA,OAAOC,IAAP,MAAiB,kBAAjB;AAEA,OAAO,MAAMC,SAAS,GAAG,OAAQC,MAAR,EAAgBC,QAAhB,EAA0BC,OAA1B,EAAmCC,OAAnC,KAAgD;AACvE,MAAIC,YAAY,GAAG,CAAnB;AACA,MAAI,CAACJ,MAAL,EAAa,OAAO;AAAEI,IAAAA;AAAF,GAAP;AAEb,MAAIC,QAAQ,GAAG,IAAIT,QAAJ,CAAaC,MAAM,CAACM,OAAO,CAACG,OAAT,CAAN,CAAwBC,KAArC,EAA4CT,IAAI,CAACU,MAAjD,EAAyDP,QAAzD,CAAf;AACAG,EAAAA,YAAY,GAAI,MAAMC,QAAQ,CAACI,SAAT,CAAmBP,OAAnB,CAAtB;AAEA,SAAO;AAAEE,IAAAA;AAAF,GAAP;AACD,CARM,C,CAUP;AACA;AACA;AACA;AACA;AAEA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA","sourcesContent":["import { Contract } from \"@ethersproject/contracts\";\nimport chains from \"./contracts/chains.json\";\nimport abis from \"./contracts/abis\";\n\nexport const useDonuts = async ( active, provider, address, network ) => {\n  let donutBalance = 0;\n  if (!active) return { donutBalance };\n\n  let contract = new Contract(chains[network.chainId].donut, abis.IERC20, provider);\n  donutBalance = (await contract.balanceOf(address));\n  \n  return { donutBalance }\n}\n\n// import React, { useState, useEffect, useContext, createContext } from \"react\";\n// import { Contract } from \"@ethersproject/contracts\";\n// import { Zero } from \"@ethersproject/constants\";\n// import chains from \"./contracts/chains.json\";\n// import abis from \"./contracts/abis\";\n\n// const donutContext = createContext();\n\n// export function UseDonutsProvider({ web3React, children }){\n//   const donuts = useProvideDonuts(web3React);\n//   return <donutContext.Provider value={donuts}>{children}</donutContext.Provider>;\n// }\n\n// export const useDonuts = () => {\n//   return useContext(donutContext);\n// };\n\n// function useProvideDonuts({account, active, library, chainId}){\n//   const [signer, setSigner] = useState(null);\n//   const [feeBalance, setFeeBalance] = useState(Zero);\n//   const [donutBalance, setDonutBalance] = useState(Zero);\n//   const [token, setToken] = useState(null);\n//   const [tipping, setTipping] = useState(null);\n\n//   useEffect(() => {\n//     if(!active) { setSigner(null); setFeeBalance(Zero); setDonutBalance(Zero); setToken(null); setTipping(null); return; }\n//     setSigner(library.getSigner())\n//     const token = new Contract(chains[chainId.toString()].donut, abis.IERC20, library);\n//     setToken(token);\n//     setTipping(tipping);\n//     async function getBalance(account){\n//       setFeeBalance(await library.getBalance(account));\n//       setDonutBalance(await token.balanceOf(account));\n//     }\n//     account && getBalance(account);\n//   }, [active, chainId])\n\n//   return {\n//     signer,\n//     feeBalance,\n//     donutBalance,\n//     token\n//   };\n// }"]},"metadata":{},"sourceType":"module"}